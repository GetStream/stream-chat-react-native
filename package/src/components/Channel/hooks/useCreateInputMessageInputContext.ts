import { useMemo } from 'react';

import type { InputMessageInputContextValue } from '../../../contexts/messageInputContext/MessageInputContext';

export const useCreateInputMessageInputContext = ({
  additionalTextInputProps,
  asyncMessagesLockDistance,
  asyncMessagesMinimumPressDuration,
  asyncMessagesMultiSendEnabled,
  asyncMessagesSlideToCancelDistance,
  AttachButton,
  AudioAttachmentUploadPreview,
  AudioRecorder,
  audioRecordingEnabled,
  AudioRecordingInProgress,
  AudioRecordingLockIndicator,
  AudioRecordingPreview,
  AudioRecordingWaveform,
  AutoCompleteSuggestionHeader,
  AutoCompleteSuggestionItem,
  AutoCompleteSuggestionList,
  autoCompleteSuggestionsLimit,
  channelId,
  clearEditingState,
  clearQuotedMessageState,
  CommandInput,
  CommandsButton,
  compressImageQuality,
  CooldownTimer,
  CreatePollContent,
  doDocUploadRequest,
  doImageUploadRequest,
  editing,
  editMessage,
  FileUploadPreview,
  handleAttachButtonPress,
  hasCameraPicker,
  hasCommands,
  hasFilePicker,
  hasImagePicker,
  ImageUploadPreview,
  initialValue,
  Input,
  InputButtons,
  InputEditingStateHeader,
  InputReplyStateHeader,
  maxMessageLength,
  maxNumberOfFiles,
  mentionAllAppUsersEnabled,
  mentionAllAppUsersQuery,
  MoreOptionsButton,
  numberOfLines,
  onChangeText,
  openPollCreationDialog,
  quotedMessage,
  SendButton,
  sendImageAsync,
  sendMessage,
  SendMessageDisallowedIndicator,
  setInputRef,
  setQuotedMessageState,
  showPollCreationDialog,
  ShowThreadMessageInChannelButton,
  StartAudioRecordingButton,
  StopMessageStreamingButton,
  UploadProgressIndicator,
}: InputMessageInputContextValue & {
  /**
   * To ensure we allow re-render, when channel is changed
   */
  channelId?: string;
}) => {
  const editingDep = editing ? editing.id : '';
  const quotedMessageId = quotedMessage ? quotedMessage.id : '';

  const inputMessageInputContext: InputMessageInputContextValue = useMemo(
    () => ({
      additionalTextInputProps,
      asyncMessagesLockDistance,
      asyncMessagesMinimumPressDuration,
      asyncMessagesMultiSendEnabled,
      asyncMessagesSlideToCancelDistance,
      AttachButton,
      AudioAttachmentUploadPreview,
      AudioRecorder,
      audioRecordingEnabled,
      AudioRecordingInProgress,
      AudioRecordingLockIndicator,
      AudioRecordingPreview,
      AudioRecordingWaveform,
      AutoCompleteSuggestionHeader,
      AutoCompleteSuggestionItem,
      AutoCompleteSuggestionList,
      autoCompleteSuggestionsLimit,
      clearEditingState,
      clearQuotedMessageState,
      CommandInput,
      CommandsButton,
      compressImageQuality,
      CooldownTimer,
      CreatePollContent,
      doDocUploadRequest,
      doImageUploadRequest,
      editing,
      editMessage,
      FileUploadPreview,
      handleAttachButtonPress,
      hasCameraPicker,
      hasCommands,
      hasFilePicker,
      hasImagePicker,
      ImageUploadPreview,
      initialValue,
      Input,
      InputButtons,
      InputEditingStateHeader,
      InputReplyStateHeader,
      maxMessageLength,
      maxNumberOfFiles,
      mentionAllAppUsersEnabled,
      mentionAllAppUsersQuery,
      MoreOptionsButton,
      numberOfLines,
      onChangeText,
      openPollCreationDialog,
      quotedMessage,
      SendButton,
      sendImageAsync,
      sendMessage,
      SendMessageDisallowedIndicator,
      setInputRef,
      setQuotedMessageState,
      showPollCreationDialog,
      ShowThreadMessageInChannelButton,
      StartAudioRecordingButton,
      StopMessageStreamingButton,
      UploadProgressIndicator,
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      compressImageQuality,
      channelId,
      editingDep,
      initialValue,
      maxMessageLength,
      quotedMessageId,
      CreatePollContent,
      showPollCreationDialog,
    ],
  );

  return inputMessageInputContext;
};
