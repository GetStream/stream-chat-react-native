// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Thread should match thread snapshot 1`] = `
<View
  keyboardVerticalOffset={86.5}
  onLayout={[Function]}
  style={
    Object {
      "paddingBottom": 0,
    }
  }
>
  <View
    style={
      Object {
        "height": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#FCFCFC",
          },
          Object {},
        ]
      }
      testID="message-flat-list-wrapper"
    >
      <View
        ListFooterComponent={null}
      >
        <View>
          <View
            testID="message-list-item-0"
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {},
                }
              }
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              testID="message-wrapper"
            >
              <View
                collapsable={false}
                onGestureHandlerEvent={
                  Object {
                    "current": WorkletEventHandler {
                      "eventNames": Array [
                        "onGestureHandlerStateChange",
                        "onGestureHandlerEvent",
                      ],
                      "listeners": Object {
                        "onGestureHandlerEvent": [Function],
                        "onGestureHandlerStateChange": [Function],
                      },
                      "reattachNeeded": true,
                      "worklet": [Function],
                    },
                  }
                }
                onGestureHandlerStateChange={[Function]}
                style={
                  Array [
                    undefined,
                  ]
                }
              >
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "paddingHorizontal": 8,
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    animatedStyle={
                      Object {
                        "value": Object {
                          "opacity": 0,
                        },
                      }
                    }
                    collapsable={false}
                    style={
                      Object {
                        "backgroundColor": "#FBF4DD",
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "flex-end",
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "flex-start",
                          "marginBottom": 8,
                          "marginTop": 0,
                        },
                        Object {},
                      ]
                    }
                    testID="message-simple-wrapper"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "marginRight": 8,
                          },
                          Object {},
                        ]
                      }
                      testID="message-avatar"
                    >
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "justifyContent": "center",
                                "overflow": "hidden",
                              },
                              Object {
                                "borderRadius": 16,
                                "height": 32,
                                "width": 32,
                              },
                              Object {},
                              undefined,
                            ]
                          }
                        >
                          <Image
                            accessibilityLabel="avatar-image"
                            id="GrantyBoi2"
                            initials="G"
                            onError={[Function]}
                            source={
                              Object {
                                "uri": "https://i.imgur.com/SLx06PP.png",
                              }
                            }
                            style={
                              Array [
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                undefined,
                              ]
                            }
                            testID="avatar-image"
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "opacity": 1,
                          "paddingTop": 2,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={Object {}}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopLeftRadius": 16,
                                "borderTopRightRadius": 16,
                                "borderWidth": 1,
                                "overflow": "hidden",
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderBottomLeftRadius": 0,
                                "borderBottomRightRadius": 16,
                                "borderColor": "#ECEBEB",
                              },
                              Object {},
                              Object {},
                            ]
                          }
                          testID="message-content-wrapper"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "maxWidth": 250,
                                  "paddingHorizontal": 16,
                                },
                                Object {},
                                undefined,
                              ]
                            }
                            testID="message-text-container"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignSelf": "stretch",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "flexDirection": "row",
                                    "flexWrap": "wrap",
                                    "justifyContent": "flex-start",
                                    "marginBottom": 8,
                                    "marginTop": 8,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "color": "#000000",
                                    }
                                  }
                                >
                                  Message6
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "marginTop": 4,
                          }
                        }
                        testID="message-status-time"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#7A7A7A",
                                "textAlign": "left",
                              },
                              Object {
                                "fontSize": 12,
                              },
                            ]
                          }
                        >
                          2:50 PM
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            testID="message-list-item-1"
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {},
                }
              }
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              testID="message-wrapper"
            >
              <View
                collapsable={false}
                onGestureHandlerEvent={
                  Object {
                    "current": WorkletEventHandler {
                      "eventNames": Array [
                        "onGestureHandlerStateChange",
                        "onGestureHandlerEvent",
                      ],
                      "listeners": Object {
                        "onGestureHandlerEvent": [Function],
                        "onGestureHandlerStateChange": [Function],
                      },
                      "reattachNeeded": true,
                      "worklet": [Function],
                    },
                  }
                }
                onGestureHandlerStateChange={[Function]}
                style={
                  Array [
                    undefined,
                  ]
                }
              >
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "paddingHorizontal": 8,
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    animatedStyle={
                      Object {
                        "value": Object {
                          "opacity": 0,
                        },
                      }
                    }
                    collapsable={false}
                    style={
                      Object {
                        "backgroundColor": "#FBF4DD",
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "flex-end",
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "flex-start",
                          "marginBottom": 8,
                          "marginTop": 0,
                        },
                        Object {},
                      ]
                    }
                    testID="message-simple-wrapper"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "marginRight": 8,
                          },
                          Object {},
                        ]
                      }
                      testID="message-avatar"
                    >
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "justifyContent": "center",
                                "overflow": "hidden",
                              },
                              Object {
                                "borderRadius": 16,
                                "height": 32,
                                "width": 32,
                              },
                              Object {},
                              undefined,
                            ]
                          }
                        >
                          <Image
                            accessibilityLabel="avatar-image"
                            id="NeiliBoi3"
                            initials="N"
                            onError={[Function]}
                            source={
                              Object {
                                "uri": "https://i.imgur.com/T68W8nR_d.webp?maxwidth=728&fidelity=grand",
                              }
                            }
                            style={
                              Array [
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                undefined,
                              ]
                            }
                            testID="avatar-image"
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "opacity": 1,
                          "paddingTop": 2,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={Object {}}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopLeftRadius": 16,
                                "borderTopRightRadius": 16,
                                "borderWidth": 1,
                                "overflow": "hidden",
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderBottomLeftRadius": 0,
                                "borderBottomRightRadius": 16,
                                "borderColor": "#ECEBEB",
                              },
                              Object {},
                              Object {},
                            ]
                          }
                          testID="message-content-wrapper"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "maxWidth": 250,
                                  "paddingHorizontal": 16,
                                },
                                Object {},
                                undefined,
                              ]
                            }
                            testID="message-text-container"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignSelf": "stretch",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "flexDirection": "row",
                                    "flexWrap": "wrap",
                                    "justifyContent": "flex-start",
                                    "marginBottom": 8,
                                    "marginTop": 8,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "color": "#000000",
                                    }
                                  }
                                >
                                  Message5
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "marginTop": 4,
                          }
                        }
                        testID="message-status-time"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#7A7A7A",
                                "textAlign": "left",
                              },
                              Object {
                                "fontSize": 12,
                              },
                            ]
                          }
                        >
                          2:50 PM
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            testID="message-list-item-2"
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {},
                }
              }
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              testID="message-wrapper"
            >
              <View
                collapsable={false}
                onGestureHandlerEvent={
                  Object {
                    "current": WorkletEventHandler {
                      "eventNames": Array [
                        "onGestureHandlerStateChange",
                        "onGestureHandlerEvent",
                      ],
                      "listeners": Object {
                        "onGestureHandlerEvent": [Function],
                        "onGestureHandlerStateChange": [Function],
                      },
                      "reattachNeeded": true,
                      "worklet": [Function],
                    },
                  }
                }
                onGestureHandlerStateChange={[Function]}
                style={
                  Array [
                    undefined,
                  ]
                }
              >
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "scale": 1,
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "paddingHorizontal": 8,
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    animatedStyle={
                      Object {
                        "value": Object {
                          "opacity": 0,
                        },
                      }
                    }
                    collapsable={false}
                    style={
                      Object {
                        "backgroundColor": "#FBF4DD",
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "flex-end",
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "flex-start",
                          "marginBottom": 8,
                          "marginTop": 0,
                        },
                        Object {},
                      ]
                    }
                    testID="message-simple-wrapper"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "marginRight": 8,
                          },
                          Object {},
                        ]
                      }
                      testID="message-avatar"
                    >
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "justifyContent": "center",
                                "overflow": "hidden",
                              },
                              Object {
                                "borderRadius": 16,
                                "height": 32,
                                "width": 32,
                              },
                              Object {},
                              undefined,
                            ]
                          }
                        >
                          <Image
                            accessibilityLabel="avatar-image"
                            id="GrantyBoi2"
                            initials="G"
                            onError={[Function]}
                            source={
                              Object {
                                "uri": "https://i.imgur.com/SLx06PP.png",
                              }
                            }
                            style={
                              Array [
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                Object {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                undefined,
                              ]
                            }
                            testID="avatar-image"
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "opacity": 1,
                          "paddingTop": 2,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={Object {}}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopLeftRadius": 16,
                                "borderTopRightRadius": 16,
                                "borderWidth": 1,
                                "overflow": "hidden",
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderBottomLeftRadius": 0,
                                "borderBottomRightRadius": 16,
                                "borderColor": "#ECEBEB",
                              },
                              Object {},
                              Object {},
                            ]
                          }
                          testID="message-content-wrapper"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "maxWidth": 250,
                                  "paddingHorizontal": 16,
                                },
                                Object {},
                                undefined,
                              ]
                            }
                            testID="message-text-container"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignSelf": "stretch",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "alignItems": "flex-start",
                                    "flexDirection": "row",
                                    "flexWrap": "wrap",
                                    "justifyContent": "flex-start",
                                    "marginBottom": 8,
                                    "marginTop": 8,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "color": "#000000",
                                    }
                                  }
                                >
                                  Message4
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "marginTop": 4,
                          }
                        }
                        testID="message-status-time"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#7A7A7A",
                                "textAlign": "left",
                              },
                              Object {
                                "fontSize": 12,
                              },
                            ]
                          }
                        >
                          2:50 PM
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "borderRadius": 8,
                  "height": 16,
                  "justifyContent": "center",
                  "marginVertical": 4,
                  "paddingHorizontal": 8,
                },
                Object {
                  "backgroundColor": "#000000CC",
                },
                Object {},
              ]
            }
            testID="date-separator"
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 12,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                  },
                  Object {
                    "color": "#FFFFFF",
                  },
                  Object {},
                ]
              }
            >
              May 5, 2020
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "position": "absolute",
            "top": 0,
          }
        }
      />
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "left": 0,
              "paddingVertical": 4,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "backgroundColor": "#7A7A7AE6",
            },
            Object {},
          ]
        }
        testID="error-notification"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 14,
              },
              Object {},
            ]
          }
        >
          Reconnecting...
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "borderTopWidth": 1,
            "padding": 10,
          },
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#00000014",
          },
          Object {},
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "flexDirection": "row",
            },
            Object {},
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "paddingBottom": 10,
                "paddingRight": 10,
              },
              Object {},
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingRight": 10,
                },
                Object {},
              ]
            }
          >
            <RNGestureHandlerButton
              collapsable={false}
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 5,
                  "top": 15,
                }
              }
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              testID="attach-button"
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 15,
                    "left": 15,
                    "right": 5,
                    "top": 15,
                  }
                }
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  pathFill="#7A7A7A"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      clipRule={0}
                      d="M13.468 2.888a5.07 5.07 0 012.983.635 5.07 5.07 0 012.041 2.265c.45 1.01.546 2.254-.144 3.449l-4.5 7.794a3.232 3.232 0 01-1.427 1.294c-.757.342-1.696.367-2.671-.196-.975-.563-1.422-1.389-1.506-2.215a3.233 3.233 0 01.408-1.883l4-6.928a1 1 0 011.732 1l-4 6.928c-.087.15-.176.425-.15.682.02.196.105.447.516.684.41.237.671.185.85.105.236-.107.43-.32.516-.47l4.5-7.795c.31-.538.29-1.093.049-1.636a3.072 3.072 0 00-1.214-1.346 3.072 3.072 0 00-1.773-.378c-.591.062-1.082.322-1.392.86l-5 8.66c-.654 1.133-.286 3.3 1.964 4.598 2.25 1.3 4.31.535 4.964-.598l3.5-6.062a1 1 0 111.732 1l-3.5 6.062c-1.345 2.33-4.75 3.031-7.696 1.33-2.946-1.7-4.042-5-2.696-7.33l5-8.66c.69-1.195 1.815-1.733 2.914-1.85z"
                      fill={4286216826}
                      fillRule={0}
                      propList={
                        Array [
                          "fill",
                          "fillRule",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </RNGestureHandlerButton>
          </View>
          <View
            style={Object {}}
          >
            <RNGestureHandlerButton
              collapsable={false}
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 5,
                  "right": 15,
                  "top": 15,
                }
              }
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              testID="commands-button"
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 15,
                    "left": 5,
                    "right": 15,
                    "top": 15,
                  }
                }
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  pathFill="#7A7A7A"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      clipRule={0}
                      d="M11.636 4H16l-2.91 5.818H16L10.546 20l1.09-7.273H8L11.636 4z"
                      fill={4286216826}
                      fillRule={0}
                      propList={
                        Array [
                          "fill",
                          "fillRule",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "borderRadius": 20,
                "borderWidth": 1,
                "flex": 1,
              },
              Object {
                "borderColor": "#ECEBEB",
                "paddingVertical": 12,
              },
              Object {},
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                Object {},
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              autoFocus={true}
              editable={true}
              maxLength={5000}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onSelectionChange={[Function]}
              placeholder="Send a message"
              placeholderTextColor="#7A7A7A"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "fontSize": 14,
                    "includeFontPadding": false,
                    "padding": 0,
                    "paddingTop": 0,
                    "textAlignVertical": "center",
                  },
                  Object {
                    "color": "#000000",
                    "maxHeight": 85,
                  },
                  Object {},
                ]
              }
              testID="auto-complete-text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingBottom": 10,
                "paddingLeft": 10,
              },
              Object {},
            ]
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            testID="send-button"
          >
            <View
              accessible={true}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                pathFill="#DBDBDB"
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    clipRule={0}
                    d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10zM8 11h4V8l4 4-4 4v-3H8v-2z"
                    fill={4292598747}
                    fillRule={0}
                    propList={
                      Array [
                        "fill",
                        "fillRule",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginHorizontal": 2,
              "marginTop": 8,
            },
            Object {},
          ]
        }
        testID="show-thread-message-in-channel-button"
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 3,
                    "borderWidth": 2,
                    "height": 16,
                    "justifyContent": "center",
                    "width": 16,
                  },
                  Object {
                    "borderColor": "#7A7A7A",
                  },
                ]
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 13,
                    "marginLeft": 12,
                  },
                  Object {
                    "color": "#7A7A7A",
                  },
                  Object {},
                ]
              }
            >
              Also send to channel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
