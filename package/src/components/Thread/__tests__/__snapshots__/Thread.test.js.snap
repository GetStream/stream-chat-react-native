// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Thread should match thread snapshot 1`] = `
<View
  keyboardVerticalOffset={86.5}
  onLayout={[Function]}
  style={
    {
      "paddingBottom": 0,
    }
  }
>
  <View
    style={
      {
        "height": "100%",
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flex": 1,
            "width": "100%",
          },
          {
            "backgroundColor": "#FCFCFC",
          },
          {},
        ]
      }
      testID="message-flat-list-wrapper"
    >
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListFooterComponent={null}
        ListHeaderComponent={[Function]}
        contentContainerStyle={
          [
            {
              "flexGrow": 1,
              "paddingBottom": 4,
            },
            undefined,
            {},
          ]
        }
        data={
          [
            {
              "__html": "<p>regular</p>",
              "attachments": [],
              "created_at": 2020-05-05T14:50:00.000Z,
              "dateSeparator": undefined,
              "deleted_at": null,
              "groupStyles": [
                "single",
              ],
              "html": "<p>regular</p>",
              "id": "38ef6f7c-3090-5759-a37f-ab0053aadb96",
              "message_text_updated_at": "2020-05-05T14:50:00.000Z",
              "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
              "pinned_at": null,
              "reaction_groups": null,
              "readBy": false,
              "status": "received",
              "text": "Message6",
              "type": "regular",
              "updated_at": 2020-05-05T14:50:00.000Z,
              "user": {
                "banned": false,
                "created_at": "2020-04-27T13:39:49.331742Z",
                "id": "arthur",
                "image": "https://i.imgur.com/LuuGvh0.png",
                "name": "Arthur",
                "online": false,
                "role": "user",
                "updated_at": "2020-04-27T13:39:49.332087Z",
              },
            },
            {
              "__html": "<p>regular</p>",
              "attachments": [],
              "created_at": 2020-05-05T14:50:00.000Z,
              "dateSeparator": undefined,
              "deleted_at": null,
              "groupStyles": [
                "single",
              ],
              "html": "<p>regular</p>",
              "id": "516efa25-5d29-5c9a-ad2d-4cc183e785bd",
              "message_text_updated_at": "2020-05-05T14:50:00.000Z",
              "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
              "pinned_at": null,
              "reaction_groups": null,
              "readBy": false,
              "status": "received",
              "text": "Message5",
              "type": "regular",
              "updated_at": 2020-05-05T14:50:00.000Z,
              "user": {
                "banned": false,
                "created_at": "2020-04-27T13:39:49.331742Z",
                "id": "finn",
                "image": "https://i.imgur.com/spueyAP.png",
                "name": "Finn",
                "online": false,
                "role": "user",
                "updated_at": "2020-04-27T13:39:49.332087Z",
              },
            },
            {
              "__html": "<p>regular</p>",
              "attachments": [],
              "created_at": 2020-05-05T14:50:00.000Z,
              "dateSeparator": 2020-05-05T14:50:00.000Z,
              "deleted_at": null,
              "groupStyles": [
                "single",
              ],
              "html": "<p>regular</p>",
              "id": "82a83b16-b611-527c-b3ac-765ef6220490",
              "message_text_updated_at": "2020-05-05T14:50:00.000Z",
              "parent_id": "b4612a73-fa2b-5787-bf71-1adc8f291a04",
              "pinned_at": null,
              "reaction_groups": null,
              "readBy": false,
              "status": "received",
              "text": "Message4",
              "type": "regular",
              "updated_at": 2020-05-05T14:50:00.000Z,
              "user": {
                "banned": false,
                "created_at": "2020-04-27T13:39:49.331742Z",
                "id": "arthur",
                "image": "https://i.imgur.com/LuuGvh0.png",
                "name": "Arthur",
                "online": false,
                "role": "user",
                "updated_at": "2020-04-27T13:39:49.332087Z",
              },
            },
          ]
        }
        extraData={false}
        getItem={[Function]}
        getItemCount={[Function]}
        invertStickyHeaders={true}
        inverted={true}
        isInvertedVirtualizedList={true}
        keyExtractor={[Function]}
        keyboardShouldPersistTaps="handled"
        maintainVisibleContentPosition={
          {
            "autoscrollToTopThreshold": 10,
            "minIndexForVisible": 2,
          }
        }
        maxToRenderPerBatch={30}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onScrollToIndexFailed={[Function]}
        onTouchEnd={[Function]}
        onViewableItemsChanged={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={false}
        scrollEventThrottle={0.0001}
        showsVerticalScrollIndicator={true}
        stickyHeaderIndices={[]}
        style={
          [
            {
              "transform": [
                {
                  "scaleY": -1,
                },
              ],
            },
            [
              {
                "flex": 1,
                "width": "100%",
              },
              {},
              undefined,
              undefined,
            ],
          ]
        }
        testID="message-flat-list"
        viewabilityConfig={
          {
            "viewAreaCoveragePercentThreshold": 1,
          }
        }
        viewabilityConfigCallbackPairs={
          [
            {
              "onViewableItemsChanged": [Function],
              "viewabilityConfig": {
                "viewAreaCoveragePercentThreshold": 1,
              },
            },
          ]
        }
      >
        <View>
          <View
            collapsable={false}
            onLayout={[Function]}
            style={
              {
                "transform": [
                  {
                    "scaleY": -1,
                  },
                ],
              }
            }
          >
            <View />
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "column-reverse",
                },
                {
                  "transform": [
                    {
                      "scaleY": -1,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                [
                  undefined,
                ]
              }
              testID="message-list-item-0"
            >
              <View
                style={
                  [
                    undefined,
                  ]
                }
                testID="message-wrapper"
              >
                <View
                  style={
                    [
                      [
                        {
                          "paddingHorizontal": 8,
                        },
                        {},
                      ],
                      {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {},
                      ]
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "alignItems": "flex-end",
                            "flexDirection": "row",
                          },
                          [
                            {
                              "marginBottom": 8,
                            },
                            {},
                          ],
                          {
                            "justifyContent": "flex-start",
                            "marginTop": 0,
                          },
                          {},
                        ]
                      }
                      testID="message-simple-wrapper"
                    >
                      <View
                        style={
                          [
                            {
                              "marginRight": 8,
                            },
                            {},
                          ]
                        }
                        testID="message-avatar"
                      >
                        <View>
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                {},
                                undefined,
                              ]
                            }
                          >
                            <Image
                              accessibilityLabel="Avatar Image"
                              onError={[Function]}
                              source={
                                {
                                  "uri": "https://i.imgur.com/LuuGvh0.png",
                                }
                              }
                              style={
                                [
                                  {
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "backgroundColor": "#ececec",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  undefined,
                                ]
                              }
                              testID="avatar-image"
                            />
                          </View>
                        </View>
                      </View>
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "flex-start",
                            "opacity": 1,
                            "paddingTop": 2,
                          }
                        }
                        testID="message-content"
                      >
                        <View
                          onLayout={[Function]}
                          style={{}}
                        >
                          <View
                            style={
                              [
                                {
                                  "borderTopLeftRadius": 16,
                                  "borderTopRightRadius": 16,
                                  "borderWidth": 1,
                                  "overflow": "hidden",
                                },
                                {
                                  "backgroundColor": "#FFFFFF",
                                  "borderBottomLeftRadius": 0,
                                  "borderBottomRightRadius": 16,
                                  "borderColor": "#ECEBEB",
                                },
                                {},
                                {},
                              ]
                            }
                            testID="message-content-wrapper"
                          >
                            <View
                              style={
                                [
                                  {
                                    "maxWidth": 250,
                                    "paddingHorizontal": 16,
                                  },
                                  {},
                                  undefined,
                                ]
                              }
                              testID="message-text-container"
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignSelf": "stretch",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "flexWrap": "wrap",
                                      "justifyContent": "flex-start",
                                      "marginBottom": 8,
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      {
                                        "color": "#000000",
                                      }
                                    }
                                  >
                                    Message6
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "marginTop": 4,
                              },
                              {},
                            ]
                          }
                          testID="message-status-time"
                        >
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                },
                                {},
                              ]
                            }
                          >
                            2:50 PM
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "paddingHorizontal": 4,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {
                                  "fontSize": 12,
                                },
                              ]
                            }
                          >
                            ⦁
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {},
                              ]
                            }
                          >
                            Edited
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  undefined,
                ]
              }
            />
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "column-reverse",
                },
                {
                  "transform": [
                    {
                      "scaleY": -1,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                [
                  undefined,
                ]
              }
              testID="message-list-item-1"
            >
              <View
                style={
                  [
                    undefined,
                  ]
                }
                testID="message-wrapper"
              >
                <View
                  style={
                    [
                      [
                        {
                          "paddingHorizontal": 8,
                        },
                        {},
                      ],
                      {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {},
                      ]
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "alignItems": "flex-end",
                            "flexDirection": "row",
                          },
                          [
                            {
                              "marginBottom": 8,
                            },
                            {},
                          ],
                          {
                            "justifyContent": "flex-start",
                            "marginTop": 0,
                          },
                          {},
                        ]
                      }
                      testID="message-simple-wrapper"
                    >
                      <View
                        style={
                          [
                            {
                              "marginRight": 8,
                            },
                            {},
                          ]
                        }
                        testID="message-avatar"
                      >
                        <View>
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                {},
                                undefined,
                              ]
                            }
                          >
                            <Image
                              accessibilityLabel="Avatar Image"
                              onError={[Function]}
                              source={
                                {
                                  "uri": "https://i.imgur.com/spueyAP.png",
                                }
                              }
                              style={
                                [
                                  {
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "backgroundColor": "#ececec",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  undefined,
                                ]
                              }
                              testID="avatar-image"
                            />
                          </View>
                        </View>
                      </View>
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "flex-start",
                            "opacity": 1,
                            "paddingTop": 2,
                          }
                        }
                        testID="message-content"
                      >
                        <View
                          onLayout={[Function]}
                          style={{}}
                        >
                          <View
                            style={
                              [
                                {
                                  "borderTopLeftRadius": 16,
                                  "borderTopRightRadius": 16,
                                  "borderWidth": 1,
                                  "overflow": "hidden",
                                },
                                {
                                  "backgroundColor": "#FFFFFF",
                                  "borderBottomLeftRadius": 0,
                                  "borderBottomRightRadius": 16,
                                  "borderColor": "#ECEBEB",
                                },
                                {},
                                {},
                              ]
                            }
                            testID="message-content-wrapper"
                          >
                            <View
                              style={
                                [
                                  {
                                    "maxWidth": 250,
                                    "paddingHorizontal": 16,
                                  },
                                  {},
                                  undefined,
                                ]
                              }
                              testID="message-text-container"
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignSelf": "stretch",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "flexWrap": "wrap",
                                      "justifyContent": "flex-start",
                                      "marginBottom": 8,
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      {
                                        "color": "#000000",
                                      }
                                    }
                                  >
                                    Message5
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "marginTop": 4,
                              },
                              {},
                            ]
                          }
                          testID="message-status-time"
                        >
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                },
                                {},
                              ]
                            }
                          >
                            2:50 PM
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "paddingHorizontal": 4,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {
                                  "fontSize": 12,
                                },
                              ]
                            }
                          >
                            ⦁
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {},
                              ]
                            }
                          >
                            Edited
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  undefined,
                ]
              }
            />
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              [
                {
                  "flexDirection": "column-reverse",
                },
                {
                  "transform": [
                    {
                      "scaleY": -1,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                [
                  undefined,
                ]
              }
              testID="message-list-item-2"
            >
              <View
                style={
                  [
                    undefined,
                  ]
                }
                testID="message-wrapper"
              >
                <View
                  style={
                    [
                      [
                        {
                          "paddingHorizontal": 8,
                        },
                        {},
                      ],
                      {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {},
                      ]
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "alignItems": "flex-end",
                            "flexDirection": "row",
                          },
                          [
                            {
                              "marginBottom": 8,
                            },
                            {},
                          ],
                          {
                            "justifyContent": "flex-start",
                            "marginTop": 0,
                          },
                          {},
                        ]
                      }
                      testID="message-simple-wrapper"
                    >
                      <View
                        style={
                          [
                            {
                              "marginRight": 8,
                            },
                            {},
                          ]
                        }
                        testID="message-avatar"
                      >
                        <View>
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 16,
                                  "height": 32,
                                  "width": 32,
                                },
                                {},
                                undefined,
                              ]
                            }
                          >
                            <Image
                              accessibilityLabel="Avatar Image"
                              onError={[Function]}
                              source={
                                {
                                  "uri": "https://i.imgur.com/LuuGvh0.png",
                                }
                              }
                              style={
                                [
                                  {
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "backgroundColor": "#ececec",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  undefined,
                                ]
                              }
                              testID="avatar-image"
                            />
                          </View>
                        </View>
                      </View>
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "flex-start",
                            "opacity": 1,
                            "paddingTop": 2,
                          }
                        }
                        testID="message-content"
                      >
                        <View
                          onLayout={[Function]}
                          style={{}}
                        >
                          <View
                            style={
                              [
                                {
                                  "borderTopLeftRadius": 16,
                                  "borderTopRightRadius": 16,
                                  "borderWidth": 1,
                                  "overflow": "hidden",
                                },
                                {
                                  "backgroundColor": "#FFFFFF",
                                  "borderBottomLeftRadius": 0,
                                  "borderBottomRightRadius": 16,
                                  "borderColor": "#ECEBEB",
                                },
                                {},
                                {},
                              ]
                            }
                            testID="message-content-wrapper"
                          >
                            <View
                              style={
                                [
                                  {
                                    "maxWidth": 250,
                                    "paddingHorizontal": 16,
                                  },
                                  {},
                                  undefined,
                                ]
                              }
                              testID="message-text-container"
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignSelf": "stretch",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "flexWrap": "wrap",
                                      "justifyContent": "flex-start",
                                      "marginBottom": 8,
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      {
                                        "color": "#000000",
                                      }
                                    }
                                  >
                                    Message4
                                  </Text>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "marginTop": 4,
                              },
                              {},
                            ]
                          }
                          testID="message-status-time"
                        >
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                },
                                {},
                              ]
                            }
                          >
                            2:50 PM
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "paddingHorizontal": 4,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {
                                  "fontSize": 12,
                                },
                              ]
                            }
                          >
                            ⦁
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 12,
                                },
                                {
                                  "color": "#7A7A7A",
                                  "textAlign": "left",
                                },
                                {},
                              ]
                            }
                          >
                            Edited
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "borderRadius": 8,
                    "height": 16,
                    "justifyContent": "center",
                    "marginVertical": 4,
                    "paddingHorizontal": 8,
                  },
                  {
                    "backgroundColor": "#000000CC",
                  },
                  {},
                ]
              }
              testID="date-separator"
            >
              <Text
                style={
                  [
                    {
                      "fontSize": 12,
                      "textAlign": "center",
                      "textAlignVertical": "center",
                    },
                    {
                      "color": "#FFFFFF",
                    },
                    {},
                  ]
                }
              >
                05/05/2020
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              {
                "transform": [
                  {
                    "scaleY": -1,
                  },
                ],
              }
            }
          >
            <View>
              <View
                style={
                  {
                    "marginVertical": 8,
                  }
                }
                testID="thread-footer-component"
              >
                <View
                  style={
                    {
                      "paddingHorizontal": 8,
                    }
                  }
                >
                  <View
                    style={
                      [
                        undefined,
                      ]
                    }
                    testID="message-wrapper"
                  >
                    <View
                      style={
                        [
                          undefined,
                          {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          [
                            {},
                          ]
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "alignItems": "flex-end",
                                "flexDirection": "row",
                              },
                              [
                                {
                                  "marginBottom": 12,
                                },
                                {},
                              ],
                              {
                                "justifyContent": "flex-start",
                                "marginTop": 0,
                              },
                              {},
                            ]
                          }
                          testID="message-simple-wrapper"
                        >
                          <View
                            style={
                              [
                                {
                                  "marginRight": 8,
                                },
                                {},
                              ]
                            }
                            testID="message-avatar"
                          >
                            <View>
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                      "overflow": "hidden",
                                    },
                                    {
                                      "borderRadius": 16,
                                      "height": 32,
                                      "width": 32,
                                    },
                                    {},
                                    undefined,
                                  ]
                                }
                              >
                                <Image
                                  accessibilityLabel="Avatar Image"
                                  onError={[Function]}
                                  source={
                                    {
                                      "uri": "https://i.imgur.com/spueyAP.png",
                                    }
                                  }
                                  style={
                                    [
                                      {
                                        "borderRadius": 16,
                                        "height": 32,
                                        "width": 32,
                                      },
                                      {
                                        "backgroundColor": "#ececec",
                                        "borderRadius": 16,
                                        "height": 32,
                                        "width": 32,
                                      },
                                      undefined,
                                    ]
                                  }
                                  testID="avatar-image"
                                />
                              </View>
                            </View>
                          </View>
                          <View
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": true,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              {
                                "alignItems": "flex-start",
                                "opacity": 1,
                                "paddingTop": 2,
                              }
                            }
                            testID="message-content"
                          >
                            <View
                              onLayout={[Function]}
                              style={{}}
                            >
                              <View
                                style={
                                  [
                                    {
                                      "borderTopLeftRadius": 16,
                                      "borderTopRightRadius": 16,
                                      "borderWidth": 1,
                                      "overflow": "hidden",
                                    },
                                    {
                                      "backgroundColor": "#FFFFFF",
                                      "borderBottomLeftRadius": 0,
                                      "borderBottomRightRadius": 16,
                                      "borderColor": "#ECEBEB",
                                    },
                                    {},
                                    {},
                                  ]
                                }
                                testID="message-content-wrapper"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "maxWidth": 250,
                                        "paddingHorizontal": 16,
                                      },
                                      {},
                                      undefined,
                                    ]
                                  }
                                  testID="message-text-container"
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignSelf": "stretch",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flexDirection": "row",
                                          "flexWrap": "wrap",
                                          "justifyContent": "flex-start",
                                          "marginBottom": 8,
                                          "marginTop": 8,
                                        }
                                      }
                                    >
                                      <Text
                                        style={
                                          {
                                            "color": "#000000",
                                          }
                                        }
                                      >
                                        Message3
                                      </Text>
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "marginTop": 4,
                                  },
                                  {},
                                ]
                              }
                              testID="message-status-time"
                            >
                              <Text
                                style={
                                  [
                                    {
                                      "fontSize": 12,
                                    },
                                    {
                                      "color": "#7A7A7A",
                                    },
                                    {},
                                  ]
                                }
                              >
                                2:50 PM
                              </Text>
                              <Text
                                style={
                                  [
                                    {
                                      "paddingHorizontal": 4,
                                    },
                                    {
                                      "color": "#7A7A7A",
                                      "textAlign": "left",
                                    },
                                    {
                                      "fontSize": 12,
                                    },
                                  ]
                                }
                              >
                                ⦁
                              </Text>
                              <Text
                                style={
                                  [
                                    {
                                      "fontSize": 12,
                                    },
                                    {
                                      "color": "#7A7A7A",
                                      "textAlign": "left",
                                    },
                                    {},
                                  ]
                                }
                              >
                                Edited
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "height": 24,
                        "justifyContent": "center",
                        "marginTop": 8,
                      },
                      {},
                    ]
                  }
                >
                  <RNSVGSvgView
                    bbHeight={24}
                    bbWidth={750}
                    focusable={false}
                    height={24}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "position": "absolute",
                        },
                        {
                          "flex": 0,
                          "height": 24,
                          "width": 750,
                        },
                      ]
                    }
                    width={750}
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGRect
                        fill={
                          {
                            "brushRef": "gradient",
                            "type": 1,
                          }
                        }
                        height={24}
                        propList={
                          [
                            "fill",
                          ]
                        }
                        width={750}
                        x={0}
                        y={0}
                      />
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -197380,
                              1,
                              -526345,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={1}
                          name="gradient"
                          x1={0}
                          x2={0}
                          y1={0}
                          y2={24}
                        />
                      </RNSVGDefs>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                  <Text
                    style={
                      [
                        {
                          "fontSize": 12,
                          "textAlign": "center",
                        },
                        {
                          "color": "#7A7A7A",
                        },
                        {},
                      ]
                    }
                  >
                     Replies
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          {
            "position": "absolute",
            "top": 0,
          }
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={
        [
          {
            "borderTopWidth": 1,
            "padding": 10,
          },
          {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#00000014",
          },
          {},
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
            {},
          ]
        }
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {},
            ]
          }
        >
          <View
            style={
              [
                {
                  "paddingRight": 5,
                },
                {},
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {},
                ]
              }
              testID="attach-button"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={32}
                bbWidth={32}
                fill="#7A7A7A"
                focusable={false}
                height={32}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                vbHeight={32}
                vbWidth={32}
                width={32}
              >
                <RNSVGGroup
                  fill={
                    {
                      "payload": 4286216826,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                >
                  <RNSVGGroup
                    clipPath="id"
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGPath
                      d="M17.5245 9.33332L14.8579 9.33332L14.8579 14.6666L9.52453 14.6666L9.52453 17.3333L14.8579 17.3333L14.8579 22.6667L17.5245 22.6667L17.5245 17.3333L22.8579 17.3333L22.8579 14.6666L17.5245 14.6666L17.5245 9.33332ZM16.1912 2.66665C8.83119 2.66665 2.85786 8.63998 2.85786 16C2.85786 23.36 8.83119 29.3333 16.1912 29.3333C23.5512 29.3333 29.5245 23.36 29.5245 16C29.5245 8.63998 23.5512 2.66665 16.1912 2.66665ZM16.1912 26.6667C10.3112 26.6666 5.52453 21.88 5.52453 16C5.52453 10.12 10.3112 5.33332 16.1912 5.33332C22.0712 5.33332 26.8579 10.12 26.8579 16C26.8579 21.88 22.0712 26.6666 16.1912 26.6667Z"
                      fill={
                        {
                          "payload": 4286216826,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                  <RNSVGDefs>
                    <RNSVGClipPath
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                      name="id"
                    >
                      <RNSVGRect
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        height={32}
                        matrix={
                          [
                            1,
                            0,
                            0,
                            1,
                            0.191406,
                            0,
                          ]
                        }
                        width={32}
                        x={0}
                        y={0}
                      />
                    </RNSVGClipPath>
                  </RNSVGDefs>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            style={{}}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {},
                ]
              }
              testID="commands-button"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={32}
                bbWidth={32}
                fill="#7A7A7A"
                focusable={false}
                height={32}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                vbHeight={32}
                vbWidth={32}
                width={32}
              >
                <RNSVGGroup
                  fill={
                    {
                      "payload": 4286216826,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M14.8522 28H13.5188L14.8522 18.6667H10.1855C9.01218 18.6667 9.74551 17.6667 9.77218 17.6267C11.4922 14.5867 14.0788 10.0533 17.5322 4H18.8655L17.5322 13.3333H22.2122C22.7455 13.3333 23.0388 13.5867 22.7455 14.2133C17.4788 23.4 14.8522 28 14.8522 28Z"
                    fill={
                      {
                        "payload": 4286216826,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "borderRadius": 20,
                "borderWidth": 1,
                "flex": 1,
                "marginHorizontal": 10,
              },
              {
                "borderColor": "#ECEBEB",
                "paddingVertical": 12,
              },
              {},
              null,
            ]
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                {},
              ]
            }
          >
            <TextInput
              autoFocus={true}
              editable={true}
              maxLength={5000}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              onSelectionChange={[Function]}
              placeholder="Send a message"
              placeholderTextColor="#7A7A7A"
              style={
                [
                  {
                    "flex": 1,
                    "fontSize": 16,
                    "includeFontPadding": false,
                    "padding": 0,
                    "paddingTop": 0,
                    "textAlignVertical": "center",
                  },
                  {
                    "color": "#000000",
                    "maxHeight": 85,
                    "textAlign": "left",
                  },
                  {},
                ]
              }
              testID="auto-complete-text-input"
              value=""
            />
          </View>
        </View>
        <View
          style={
            [
              {},
              {},
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {},
              ]
            }
            testID="send-button"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={32}
              bbWidth={32}
              fill="#DBDBDB"
              focusable={false}
              height={32}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 32,
                    "width": 32,
                  },
                ]
              }
              vbHeight={32}
              vbWidth={32}
              width={32}
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4292598747,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGCircle
                  cx={16}
                  cy={16}
                  fill={
                    {
                      "payload": 4292598747,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                  r={16}
                />
                <RNSVGPath
                  clipRule={0}
                  d="M9.33398 14.6666H16.0007V9.33325L22.6673 15.9999L16.0007 22.6666V17.3333H9.33398V14.6666Z"
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  fillRule={0}
                  propList={
                    [
                      "fill",
                      "fillRule",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
              "marginHorizontal": 2,
              "marginTop": 8,
            },
            {},
          ]
        }
        testID="show-thread-message-in-channel-button"
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {},
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "borderRadius": 3,
                    "borderWidth": 2,
                    "height": 16,
                    "justifyContent": "center",
                    "width": 16,
                  },
                  {
                    "borderColor": "#7A7A7A",
                  },
                ]
              }
            />
            <Text
              style={
                [
                  {
                    "fontSize": 13,
                    "marginLeft": 12,
                  },
                  {
                    "color": "#7A7A7A",
                  },
                  {},
                ]
              }
            >
              Also send to channel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
