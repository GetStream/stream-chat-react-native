// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendButton should render a non-editing disabled SendButton 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {},
    ]
  }
  testID="send-button"
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={24}
    bbWidth={24}
    focusable={false}
    height={24}
    meetOrSlice={0}
    minX={0}
    minY={0}
    pathFill="#DBDBDB"
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": 24,
          "width": 24,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width={24}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10zM8 11h4V8l4 4-4 4v-3H8v-2z"
        fill={
          {
            "payload": 4292598747,
            "type": 0,
          }
        }
        fillRule={0}
        propList={
          [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`SendButton should render a non-editing enabled SendButton 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {},
    ]
  }
  testID="send-button"
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={24}
    bbWidth={24}
    focusable={false}
    height={24}
    meetOrSlice={0}
    minX={0}
    minY={0}
    pathFill="#005FFF"
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": 24,
          "width": 24,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width={24}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14v-4H8l4-4 4 4h-3v4h-2z"
        fill={
          {
            "payload": 4278214655,
            "type": 0,
          }
        }
        fillRule={0}
        propList={
          [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`SendButton should render an editing disabled SendButton 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {},
    ]
  }
  testID="send-button"
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={24}
    bbWidth={24}
    focusable={false}
    height={24}
    meetOrSlice={0}
    minX={0}
    minY={0}
    pathFill="#DBDBDB"
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": 24,
          "width": 24,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width={24}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10zM8 11h4V8l4 4-4 4v-3H8v-2z"
        fill={
          {
            "payload": 4292598747,
            "type": 0,
          }
        }
        fillRule={0}
        propList={
          [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`SendButton should render an editing enabled SendButton 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {},
    ]
  }
  testID="send-button"
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={24}
    bbWidth={24}
    focusable={false}
    height={24}
    meetOrSlice={0}
    minX={0}
    minY={0}
    pathFill="#005FFF"
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "flex": 0,
          "height": 24,
          "width": 24,
        },
      ]
    }
    vbHeight={24}
    vbWidth={24}
    width={24}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14v-4H8l4-4 4 4h-3v4h-2z"
        fill={
          {
            "payload": 4278214655,
            "type": 0,
          }
        }
        fillRule={0}
        propList={
          [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;
