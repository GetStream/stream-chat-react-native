// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendButton should render a non-editing disabled SendButton 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="send-button"
>
  <View
    accessible={true}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={24}
      bbWidth={24}
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      pathFill="#DBDBDB"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup>
        <RNSVGPath
          clipRule={0}
          d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10zM8 11h4V8l4 4-4 4v-3H8v-2z"
          fill={4292598747}
          fillRule={0}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNGestureHandlerButton>
`;

exports[`SendButton should render a non-editing enabled SendButton 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="send-button"
>
  <View
    accessible={true}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={24}
      bbWidth={24}
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      pathFill="#005FFF"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup>
        <RNSVGPath
          clipRule={0}
          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14v-4H8l4-4 4 4h-3v4h-2z"
          fill={4278214655}
          fillRule={0}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNGestureHandlerButton>
`;

exports[`SendButton should render an editing disabled SendButton 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="send-button"
>
  <View
    accessible={true}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={24}
      bbWidth={24}
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      pathFill="#DBDBDB"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup>
        <RNSVGPath
          clipRule={0}
          d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10zM8 11h4V8l4 4-4 4v-3H8v-2z"
          fill={4292598747}
          fillRule={0}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNGestureHandlerButton>
`;

exports[`SendButton should render an editing enabled SendButton 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="send-button"
>
  <View
    accessible={true}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={24}
      bbWidth={24}
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      pathFill="#005FFF"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup>
        <RNSVGPath
          clipRule={0}
          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14v-4H8l4-4 4 4h-3v4h-2z"
          fill={4278214655}
          fillRule={0}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNGestureHandlerButton>
`;
